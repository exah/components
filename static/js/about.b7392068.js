(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./src/about.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),m=a("./node_modules/@mdx-js/tag/dist/index.js");function r(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},m=Object.keys(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components;r(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",components:n},o.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"getting-started"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#getting-started"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Getting Started"),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"install"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#install"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Install"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-sh"}},"$ yarn add pss-components\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"This package is depended on ",o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/exah/pss"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"pss")),", ",o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://emotion.sh"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"emotion"))," and ",o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/acdlite/recompose"}},o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"recompose"))," so you don't need to install them."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"import-components"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#import-components"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Import components"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre"},"import React from 'react'\nimport { Layout } from 'pss-components'\n\nconst MyApp = () => (\n  <Layout>\n    <Layout.Item>\n      Header\n    </Layout.Item>\n    <Layout.Content>\n      Content\n    </Layout.Content>\n    <Layout.Item>\n      Footer\n    </Layout.Item>\n  </Layout>\n)\n")),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"provide-custom-theme"}},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#provide-custom-theme"}},o.a.createElement(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Provide custom theme"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre"},"import React from 'react'\nimport { createTheme } from 'pss'\nimport { ThemeProvider } from 'emotion-theming'\n\nconst myTheme = createTheme({\n  grid: 12,\n  media: {\n    M: '(max-width: 600px)',\n    T: '(min-width: 601px) and (max-width: 1024px)',\n    D: '(min-width: 1025px)'\n  },\n  space: {\n    default: [ 0, 8, 16, 32, 64 ]\n  },\n  color: {\n    black: '#000',\n    gray: [ '#eee', '#ddd', '#ccc', '#bbb', '#aaa' ],\n    white: '#fff'\n  },\n  palette: {\n    default: {\n      bg: '#fff',\n      fg: '#000'\n    },\n    gray: {\n      bg: '#eee',\n      fg: '#000'\n    },\n    inverted: {\n      bg: '#000',\n      fg: '#fff'\n    }\n  }\n})\n\nconst MyApp = () => (\n  <ThemeProvider theme={myTheme}>\n    <Layout>\n      <Layout.Item>\n        Header\n      </Layout.Item>\n      <Layout.Content>\n        Content\n      </Layout.Content>\n      <Layout.Item>\n        Footer\n      </Layout.Item>\n    </Layout>\n  </ThemeProvider>\n)\n")))}}}]);